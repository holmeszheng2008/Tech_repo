The term “render prop” refers to a technique for sharing code between React components using a prop whose value is a function. A component with a render prop takes a function that returns a React element and calls it instead of implementing its own render logic.

syntax:
	a prop attribute = (vars...) => JSX // (React element)

use case:
	The inner rendered elements have data dependency on outer elements. Otherwise, you can just pass the inner element in the props.
	<DataProvider innerBox={
		<p> hello world </p>
	    }
	)}/>	
		vs.
	<DataProvider render={data => (
	  <h1>Hello {data.target}</h1>
	)}/>
	// data is passed from data provider


# You can implement most higher-order components (HOC) using a regular component with a render prop
function withMouse(Component) {
  return class extends React.Component {
    render() {
      return (
        <Mouse render={mouse => (
          <Component {...this.props} mouse={mouse} />
        )}/>
      );
    }
  }
}

const enhancedComponentWithMouse = withMouse(baseComponent)
